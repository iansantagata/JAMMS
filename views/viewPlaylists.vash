@html.extend('layout', function(model) {
	@html.block('content', function(model) {

    <h2 class="mb-3">Your Playlists</h2>
    <p>You currently have <b>@model.totalNumberOfPlaylists</b> playlists saved in Spotify!</p>

    <div id="playlistsPerPageSelector" class="row align-items-center justify-content-center mb-4">
      <div class="col dropdown">
        <button class="btn btn-outline-info btn-sm dropdown-toggle" type="button" data-toggle="dropdown">Playlists Per Page</button>
        <div class="dropdown-menu">
          <a class="dropdown-item" href="/playlists?playlistsPerPage=10">10</a>
          <a class="dropdown-item" href="/playlists?playlistsPerPage=20">20</a>
          <a class="dropdown-item" href="/playlists?playlistsPerPage=30">30</a>
          <a class="dropdown-item" href="/playlists?playlistsPerPage=40">40</a>
          <a class="dropdown-item" href="/playlists?playlistsPerPage=50">50</a>
        </div>
      </div>
    </div>

    @if(model.playlists.length > 0)
    {
      <div id="playlists" class="table-responsive">
        <table class="table table-striped table-sm table-hover">
          <thead>
            <tr>
              <th scope="col" class="align-middle">Playlist #</th>
              <th scope="col" class="align-middle">Name</th>
              <th scope="col" class="align-middle">Owner</th>
              <th scope="col" class="align-middle">Link</th>
              <th scope="col" class="align-middle">Image</th>
            </tr>
          </thead>
          <tbody>
            @{
              var playlistCount = ((model.currentPage - 1) * model.numberOfPlaylistsPerPage) + 1;
            }

            @model.playlists.forEach(function(item)
            {
              <tr>
                <th scope="row" class="align-middle">@playlistCount</th>
                <td class="align-middle text-capitalize">@item.name</td>
                <td class="align-middle">@item.owner.display_name</td>
                <td class="align-middle col-md-2">
                  <a href="/playlist?playlistId=@item.id" role="button" class="btn btn-outline-info btn-sm">View Playlist</a>
                </td>
                <td class="align-middle col-md-2">
                  @{
                    // Images are ordered from widest to smallest width, so start at the end to keep images small-ish yet reasonably visible
                    var playlistImageIndex = item.images.length - 1;
                    // We want images that are at least over 100 pixels in both dimensions for the user to see them
                    // If there are none, we will end up using the first and biggest image
                    while (playlistImageIndex > 0 &&
                      item.images[playlistImageIndex] !== undefined &&
                      (item.images[playlistImageIndex].width < 100 ||
                      item.images[playlistImageIndex].height < 100))
                    {
                      playlistImageIndex = playlistImageIndex - 1;
                    }
                  }

                  @if(item.images[playlistImageIndex] !== undefined)
                  {
                    <img src="@item.images[playlistImageIndex].url" class="img-fluid" alt="Playlist Named @item.name" />
                  }
                  else
                  {
                    <img src="images/question.png" class="img-fluid" alt="Playlist Named @item.name" />
                  }
                </td>
              </tr>
              @{
                playlistCount++;
              }
            })
          </tbody>
        </table>
      </div>
    }

    <nav id="pages" class="my-5">
      <ul class="pagination justify-content-center">
        @{
          var isPreviousPageDisabled = model.currentPage <= 1;
          var previousPageDisabledClass = "disabled";
          var previousPageUrl = "#";

          if (!isPreviousPageDisabled)
          {
            previousPageDisabledClass = "";

            var previousPageNumber = model.currentPage - 1;
            previousPageUrl = "/playlists?pageNumber=" + previousPageNumber + "&playlistsPerPage=" + model.numberOfPlaylistsPerPage;
          }
        }
        <li class="page-item @previousPageDisabledClass">
          <a class="page-link" href="@previousPageUrl">Previous</a>
        </li>

        @if(model.currentPage - 2 >= 1)
        {
          @{
            var twoPagesBack = model.currentPage - 2;
            var twoPagesBackUrl = "/playlists?pageNumber=" + twoPagesBack + "&playlistsPerPage=" + model.numberOfPlaylistsPerPage;
          }
          <li class="page-item"><a class="page-link" href="@twoPagesBackUrl">@twoPagesBack</a></li>
        }

        @if(model.currentPage - 1 >= 1)
        {
          @{
            var onePageBack = model.currentPage - 1;
            var onePageBackUrl = "/playlists?pageNumber=" + onePageBack + "&playlistsPerPage=" + model.numberOfPlaylistsPerPage;
          }
          <li class="page-item"><a class="page-link" href="@onePageBackUrl">@onePageBack</a></li>
        }

        <li class="page-item"><a class="page-link" href="#"><b>@model.currentPage</b></a></li>

        @if(model.currentPage + 1 <= model.numberOfPages)
        {
          @{
            var onePageForward = model.currentPage + 1;
            var onePageForwardUrl = "/playlists?pageNumber=" + onePageForward + "&playlistsPerPage=" + model.numberOfPlaylistsPerPage;
          }
          <li class="page-item"><a class="page-link" href="@onePageForwardUrl">@onePageForward</a></li>
        }

        @if(model.currentPage + 2 <= model.numberOfPages)
        {
          @{
            var twoPagesForward = model.currentPage + 2;
            var twoPagesForwardUrl = "/playlists?pageNumber=" + twoPagesForward + "&playlistsPerPage=" + model.numberOfPlaylistsPerPage;
          }
          <li class="page-item"><a class="page-link" href="@twoPagesForwardUrl">@twoPagesForward</a></li>
        }

        @{
          var isNextPageDisabled = model.currentPage >= model.numberOfPages;
          var nextPageDisabledClass = "disabled";
          var nextPageUrl = "#";

          if (!isNextPageDisabled)
          {
            nextPageDisabledClass = "";

            var nextPageNumber = model.currentPage + 1;
            nextPageUrl = "/playlists?pageNumber=" + nextPageNumber + "&playlistsPerPage=" + model.numberOfPlaylistsPerPage;
          }
        }
        <li class="page-item @nextPageDisabledClass">
          <a class="page-link" href="@nextPageUrl">Next</a>
        </li>
      </ul>
    </nav>
	})
})
