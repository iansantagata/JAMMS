@html.extend('layout', function(model) {
	@html.block('content', function(model) {

    <h2 class="mb-3">Your Playlists</h2>
    <p>You currently have <b>@model.totalNumberOfPlaylists</b> playlists saved in Spotify!</p>

    @if(model.playlists.length > 0)
    {
      <div id="playlists" class="table-responsive">
        <table class="table table-striped table-sm table-hover">
          <thead>
            <tr>
              <th scope="col" class="align-middle">Playlist #</th>
              <th scope="col" class="align-middle">Name</th>
              <th scope="col" class="align-middle">Owner</th>
              <th scope="col" class="align-middle">Link</th>
              <th scope="col" class="align-middle">Image</th>
            </tr>
          </thead>
          <tbody>
            @{
              var playlistCount = ((model.currentPage - 1) * model.numberOfPlaylistsPerPage) + 1;
            }

            @model.playlists.forEach(function(item)
            {
              <tr>
                <th scope="row" class="align-middle">@playlistCount</th>
                <td class="align-middle text-capitalize">@item.name</td>
                <td class="align-middle">@item.owner.display_name</td>
                <td class="align-middle col-md-2">
                  <a href="/playlist?playlistId=@item.id" role="button" class="btn btn-outline-info btn-sm">View Playlist</a>
                </td>
                <td class="align-middle col-md-2">
                  @{
                    // Images are ordered from widest to smallest width, so start at the end to keep images small-ish yet reasonably visible
                    var playlistImageIndex = item.images.length - 1;
                    // We want images that are at least over 100 pixels in both dimensions for the user to see them
                    // If there are none, we will end up using the first and biggest image
                    while (playlistImageIndex > 0 &&
                      (item.images[playlistImageIndex].width < 100 ||
                      item.images[playlistImageIndex].height < 100))
                    {
                      playlistImageIndex = playlistImageIndex - 1;
                    }
                  }

                  @if(item.images[playlistImageIndex] !== undefined)
                  {
                    <img src="@item.images[playlistImageIndex].url" class="img-fluid" alt="Playlist Named @item.name" />
                  }
                  else
                  {
                    <img src="images/question.png" class="img-fluid" alt="Playlist Named @item.name" />
                  }
                </td>
              </tr>
              @{
                playlistCount++;
              }
            })
          </tbody>
        </table>
      </div>
    }

    // TODO - Replace below buttons with pagination functionality from Bootstrap

		<div id="pages" class="row align-items-center justify-content-center mb-4">
			<div id="firstPage" class="col-1">
				@{
					var disabledClass = model.currentPage - 2 > 0 ? "" : "disabled";
				}
				<a href="/playlists?pageNumber=1&playlistsPerPage=@model.numberOfPlaylistsPerPage"
					role="button" class="btn btn-info btn-sm @disabledClass">&lt;&lt;</a>
			</div>

			<div id="backOnePage" class="col-1">
				@{
					var disabledClass = model.currentPage - 1 > 0 ? "" : "disabled";
					var onePageBack = model.currentPage - 1;
				}
				<a href="/playlists?pageNumber=@onePageBack&playlistsPerPage=@model.numberOfPlaylistsPerPage"
					role="button" class="btn btn-info btn-sm @disabledClass">&lt;</a>
			</div>

			<div id="currentPage" class="col-1">
				<a href="/playlists?pageNumber=@model.currentPage&playlistsPerPage=@model.numberOfPlaylistsPerPage"
					role="button" class="btn btn-info btn-sm disabled">@model.currentPage</a>
			</div>

			<div id="forwardOnePage" class="col-1">
				@{
					var disabledClass = model.currentPage + 1 <= model.numberOfPages ? "" : "disabled";
					var onePageForward = model.currentPage + 1;
				}
				<a href="/playlists?pageNumber=@onePageForward&playlistsPerPage=@model.numberOfPlaylistsPerPage"
					role="button" class="btn btn-info btn-sm @disabledClass">&gt;</a>
			</div>

			<div id="lastPage" class="col-1">
				@{
					var disabledClass = model.currentPage + 2 <= model.numberOfPages ? "" : "disabled";
				}
				<a href="/playlists?pageNumber=@model.numberOfPages&playlistsPerPage=@model.numberOfPlaylistsPerPage"
					role="button" class="btn btn-info btn-sm @disabledClass">&gt;&gt;</a>
			</div>
		</div>

    <div id="playlistsPerPageSelector" class="row align-items-center justify-content-center mb-4">
      <div class="col-3 dropdown">
        <button class="btn btn-outline-info btn-sm dropdown-toggle" type="button" data-toggle="dropdown">Playlists Per Page</button>
        <div class="dropdown-menu">
          <a class="dropdown-item" href="/playlists?playlistsPerPage=10">10</a>
          <a class="dropdown-item" href="/playlists?playlistsPerPage=20">20</a>
          <a class="dropdown-item" href="/playlists?playlistsPerPage=30">30</a>
          <a class="dropdown-item" href="/playlists?playlistsPerPage=40">40</a>
          <a class="dropdown-item" href="/playlists?playlistsPerPage=50">50</a>
        </div>
      </div>
    </div>
	})
})
