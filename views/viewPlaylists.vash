@html.extend('layout', function(model) {
  @html.block('content', function(model) {

    <script src="scripts/viewPlaylists.js"></script>

    <h2 class="mb-3">Your Playlists</h2>
    <p>You currently have <strong>@model.totalNumberOfPlaylists</strong> playlists saved in Spotify!</p>

    <div id="playlistsPerPageSelector" class="align-items-center mb-4">
      <div class="input-group justify-content-center">
        <div class="dropdown input-group-prepend">
          <button id="playlistsPerPageDropdown" class="btn btn-outline-info btn-sm dropdown-toggle" type="button" data-toggle="dropdown">Playlists Per Page</button>
          <div id="playlistsPerPageDropdownOptionsContainer" class="dropdown-menu">
            <script type="text/javascript">
              var playlistsPerPageSelected = @model.numberOfPlaylistsPerPage;

              addPlaylistsPerPageDropdownOptions(playlistsPerPageSelected);
            </script>
          </div>
        </div>
        <div class="input-group-append">
          <label class="input-group-text" for="playlistsPerPageDropdown">@model.numberOfPlaylistsPerPage</label>
        </div>
      </div>
    </div>

    @if(model.playlists.length > 0)
    {
      <div id="playlists" class="table-responsive">
        <table class="table table-striped table-sm table-hover small">
          <thead>
            <tr>
              <th scope="col" class="align-middle">Playlist #</th>
              <th scope="col" class="align-middle">Name</th>
              <th scope="col" class="align-middle">Owner</th>
              <th scope="col" class="align-middle">Link</th>
              <th scope="col" class="align-middle">Image</th>
            </tr>
          </thead>
          <tbody>
            @{
              var playlistCount = (model.currentPage - 1) * model.numberOfPlaylistsPerPage;
            }

            @model.playlists.forEach(function(item)
            {
              playlistCount++;

              <tr>
                <th scope="row" class="align-middle">@playlistCount</th>
                <td class="align-middle text-capitalize">@item.name</td>
                <td class="align-middle">@item.owner.display_name</td>
                <td class="align-middle col-md-2">
                  @{
                    var viewPlaylistLinkId = "viewPlaylistLink-" + playlistCount;
                  }
                  <a id="@viewPlaylistLinkId" href="/playlist?playlistId=@item.id" role="button" class="btn btn-outline-info btn-sm">
                    View
                  </a>
                </td>
                <td class="align-middle col-md-2">
                  @{
                    // Have to manually JSON stringify this object
                    // This is being done so that Vash at compile time can transfer data to JavaScript at run-time
                    // If we did not utilize JSON.stringify(), the default string output would be [object Object]
                    var imagesJson = JSON.stringify(item.images);

                    var playlistImageId = `imageForPlaylist-${playlistCount}`;
                    var minimumPixelsPerSide = 60;
                    var defaultImagePath = "images/question_small.png";
                  }
                  <img id="@playlistImageId" class="img-fluid" alt="Playlist Named @item.playlistName" />
                  <script type="text/javascript">
                    var images = @html.raw(imagesJson);
                    var playlistImagePath = getImagePath(images, @minimumPixelsPerSide, "@defaultImagePath");

                    setImageSourceAttributeById("@playlistImageId", playlistImagePath);
                  </script>
                </td>
              </tr>
            })
          </tbody>
        </table>
      </div>
    }

    <nav id="pages" class="my-5">
      <ul id="pageNavigationContainer" class="pagination justify-content-center">
        <script type="text/javascript">
          addPageNavigationButtons(@model.currentPage, @model.numberOfPlaylistsPerPage, @model.numberOfPages);
        </script>
      </ul>
    </nav>
  })
})
