@html.extend('layout', function(model) {
  @html.block('content', function(model) {

    <script defer src="scripts/home.js"></script>

    <h3 class="mb-3">Your Playlists</h3>
    <p>You currently have <strong>@model.numberOfPlaylists</strong> playlists saved in Spotify!</p>

    @if(model.samplePlaylistData.length > 0)
    {
      <p>Some of your playlists are listed below!</p>

      <div id="playlists" class="table-responsive">
        <table class="table table-striped table-sm table-hover">
          <thead>
            <tr>
              <th scope="col" class="align-middle">Playlist #</th>
              <th scope="col" class="align-middle">Name</th>
              <th scope="col" class="align-middle">Owner</th>
              <th scope="col" class="align-middle">Link</th>
              <th scope="col" class="align-middle">Image</th>
            </tr>
          </thead>
          <tbody>
            @{
              var playlistCount = 0;
            }

            @model.samplePlaylistData.forEach(function(item)
            {
              playlistCount++;

              <tr>
                <th scope="row" class="align-middle">@playlistCount</th>
                <td class="align-middle text-capitalize">@item.name</td>
                <td class="align-middle">@item.owner.display_name</td>
                <td class="align-middle col-md-2">
                  @{
                    var viewPlaylistLinkId = "viewPlaylistLink-" + playlistCount;
                  }
                  <a id="@viewPlaylistLinkId" href="/playlist?playlistId=@item.id" role="button" class="btn btn-outline-info btn-sm">View Playlist</a>
                </td>
                <td class="align-middle col-md-2">
                  @{
                    // Have to manually JSON stringify this object
                    // This is being done so that Vash at compile time can transfer data to JavaScript at run-time
                    // If we did not utilize JSON.stringify(), the default string output would be [object Object]
                    var imagesJson = JSON.stringify(item.images);

                    var playlistImageId = `imageForPlaylist-${playlistCount}`;
                    var minimumPixelsPerSide = 50;
                    var defaultImagePath = "images/question_small.png";
                  }
                  <img id="@playlistImageId" class="img-fluid" alt="Playlist Named @item.name" />
                  <script type="text/javascript">
                    var images = @html.raw(imagesJson);
                    var playlistImagePath = getImagePath(images, @minimumPixelsPerSide, "@defaultImagePath");

                    setImageSourceAttributeById("@playlistImageId", playlistImagePath);
                  </script>
                </td>
              </tr>
            })
          </tbody>
        </table>
      </div>
    }

    <div id="interact" class="row align-middle mt-3 mb-5">
      <div class="col">
        <a id="seeAllPlaylistsButton" href="/playlists"
            role="button" class="btn btn-info btn-sm">See All Playlists</a>
      </div>
      <div class="col">
        <a id="createPlaylistButton" href="/createPlaylist"
            role="button" class="btn btn-info btn-sm">Create Playlist</a>
      </div>
      <div class="col">
        <a id="createSmartPlaylistButton" href="/createSmartPlaylist"
            role="button" class="btn btn-info btn-sm">Create Smart Playlist</a>
      </div>
    </div>

    <h3 class="my-3">Your Library</h3>
    <p>You currently have <strong>@model.numberOfTracks</strong> songs saved in Spotify!</p>

    @if(model.sampleTrackData.length > 0)
    {
      <h6 class="my-4">Your Top Tracks</h6>

      <div id="songs" class="table-responsive">
        <table class="table table-striped table-sm table-hover">
          <thead>
            <tr>
              <th scope="col" class="align-middle">Track #</th>
              <th scope="col" class="align-middle">Title</th>
              <th scope="col" class="align-middle">Artist</th>
              <th scope="col" class="align-middle">Album</th>
              <th scope="col" class="align-middle">Album Art</th>
            </tr>
          </thead>
          <tbody>
            @{
              var trackCount = 0;
            }
            @model.sampleTrackData.forEach(function(item)
            {
              trackCount++;

              <tr>
                <th scope="row" class="align-middle">@trackCount</th>
                <td class="align-middle text-capitalize">@item.name</td>

                @{
                  // Have to manually JSON stringify this object
                  // This is being done so that Vash at compile time can transfer data to JavaScript at run-time
                  // If we did not utilize JSON.stringify(), the default string output would be [object Object]
                  var artistsJson = JSON.stringify(item.artists);
                  var artistNamesId = `artistNamesForTrack-${trackCount}`;
                }
                <td id="@artistNamesId" class="align-middle text-capitalize"></td>
                <script type="text/javascript">
                  var artists = @html.raw(artistsJson);
                  var commaSeparatedArtistNames = getCommaSeparatedArtistNames(artists);

                  setTextInElementById("@artistNamesId", commaSeparatedArtistNames);
                </script>

                <td class="align-middle text-capitalize">@item.album.name</td>
                <td class="align-middle col-md-2">
                  @{
                    // Have to manually JSON stringify this object
                    // This is being done so that Vash at compile time can transfer data to JavaScript at run-time
                    // If we did not utilize JSON.stringify(), the default string output would be [object Object]
                    var album = item.album || {};
                    var imagesJson = JSON.stringify(album.images);

                    var albumImageId = `albumImageForTrack-${trackCount}`;
                    var minimumPixelsPerSide = 64;
                    var defaultImagePath = "images/question.png";
                  }
                  <img id="@albumImageId" class="img-fluid" alt="Album Named @album.name" />
                  <script type="text/javascript">
                    var images = @html.raw(imagesJson);
                    var albumImagePath = getImagePath(images, @minimumPixelsPerSide, "@defaultImagePath");

                    setImageSourceAttributeById("@albumImageId", albumImagePath);
                  </script>
                </td>
              </tr>
            })
          </tbody>
        </table>
      </div>
    }

    <h3 class="my-3">Your Artists</h3>
    <p>You currently have <strong>@model.numberOfArtists</strong> artists saved in Spotify!</p>

    @if(model.sampleArtistData.length > 0)
    {
      <h6 class="my-4">Your Top Artists</h6>

      <div id="artists" class="table-responsive">
        <table class="table table-striped table-sm table-hover">
          <thead>
            <tr>
              <th scope="col" class="align-middle">Artist #</th>
              <th scope="col" class="align-middle">Artist Name</th>
              <th scope="col" class="align-middle">Genres</th>
              <th scope="col" class="align-middle">Image</th>
            </tr>
          </thead>
          <tbody>
            @{
              var artistCount = 0;
            }
            @model.sampleArtistData.forEach(function(item)
            {
              artistCount++;

              <tr>
                <th scope="row" class="align-middle">@artistCount</th>
                <td class="align-middle text-capitalize">@item.name</td>
                <td class="align-middle text-capitalize">
                  @item.genres.forEach(function(genre)
                  {
                    @html.raw(genre)
                    <br/>
                  })
                </td>
                <td class="align-middle col-md-2">
                  @{
                    // Have to manually JSON stringify this object
                    // This is being done so that Vash at compile time can transfer data to JavaScript at run-time
                    // If we did not utilize JSON.stringify(), the default string output would be [object Object]
                    var imagesJson = JSON.stringify(item.images);

                    var artistImageId = `imageForArtist-${artistCount}`;
                    var minimumPixelsPerSide = 100;
                    var defaultImagePath = "images/question.png";
                  }
                  <img id="@artistImageId" class="img-fluid" alt="Artist Named @item.name" />
                  <script type="text/javascript">
                    var images = @html.raw(imagesJson);
                    var artistImagePath = getImagePath(images, @minimumPixelsPerSide, "@defaultImagePath");

                    setImageSourceAttributeById("@artistImageId", artistImagePath);
                  </script>
                </td>
              </tr>
            })
          </tbody>
        </table>
      </div>
    }
  })
})
